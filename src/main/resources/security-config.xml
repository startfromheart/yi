<?xml version="1.0" encoding="GBK"?>

<!-- - Sample namespace-based configuration - -->

<beans:beans xmlns="http://www.springframework.org/schema/security"
	xmlns:beans="http://www.springframework.org/schema/beans" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-3.0.xsd
                        http://www.springframework.org/schema/security http://www.springframework.org/schema/security/spring-security-3.1.xsd">

	<debug />

	<global-method-security pre-post-annotations="enabled" />

	<http pattern="/loggedout.jsp" security="none" />
	<http pattern="/login.htm" security="none" />

	<http use-expressions="true">
		<intercept-url pattern="/admin/**" access="isAuthenticated()" />
		<!-- Allow all other requests. In a real application you should adopt a 
			whitelisting approach where access is not allowed by default -->
		<form-login login-page="/login.htm" login-processing-url="/login-processing.htm"
			default-target-url="/index.htm" always-use-default-target="true" />
		<logout logout-success-url="/loggedout.jsp" delete-cookies="JSESSIONID" />
		<remember-me />
	</http>


	<beans:bean id="encoder"
		class="org.springframework.security.crypto.password.StandardPasswordEncoder" />
	<beans:bean id="userDetailsService"
		class="com.nianway.core.biz.UserDetailsServiceManager" />

	<authentication-manager>
		<authentication-provider user-service-ref="userDetailsService">
			<password-encoder ref="encoder" />
		</authentication-provider>
	</authentication-manager>

</beans:beans>
